#!/usr/local/bin/bash 

# Updated on 10-1-2023

# yt-playlist macOS

	if [ "$EUID" == "0" ]
	then echo "Please do not run as root."
	exit
	fi
not_a_playlist_id="7807897890789078907807 Not a channel/playlist/album."
PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"
PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
PATH="/usr/local/opt/gawk/libexec/gnubin:$PATH"
PATH="/usr/local/opt/grep/libexec/gnubin:$PATH"
external_arguments1="$1"
external_arguments2="$2"
yt_playlist_home_dir="${HOME}/.config/yt-playlist"
audio_dir="${HOME}/Music"
video_dir="${HOME}/Videos"
show_audio_dir=$(printf '"%s" \n' "Saved to: ${HOME}/Music/")
show_video_dir=$(printf '"%s" \n' "Saved to: ${HOME}/Videos/")
tmp_dir="/tmp"
unset termux_pulse_fix
yt_video_number="1:100"
version="macOS v2.62.1_test"


replace
notify-send -i "${tmp_dir}/yt-playlist_icons.jpg" "yt-playlist"
with
terminal-notifier -title "yt-playlist" -message

replace
notify-send "yt-playlist"
with
terminal-notifier -title "yt-playlist" -message

replace
if command -v notify-send >/dev/null
with
if command -v terminal-notifier >/dev/null


replace results_function with this one.

function results_function ()
{
	if [[ "$yt_playlist_id" = UC* ]]
	then
	if [ -n "$yt_playlist_results" ]
	then
	clear
	else
	clear
	echo "Please wait."
	yt_playlist_results=$(2>/dev/null yt-dlp -N4 --ignore-errors --no-warnings --quiet --flat-playlist --compat-options no-youtube-unavailable-videos -I "$yt_video_number" --print "%(url)s Video: %(duration>%H:%M:%S)s - %(title)s" "https://www.youtube.com/channel/${yt_playlist_id}/videos" | sed '/Private video/d' | sed '/Deleted video/d' | sed 's/|//g' | tr -s '[:space:]' | nl -n"ln" -w2 -s " " &)
	yt_playlist_total_number=$(echo "${yt_playlist_results}" | wc -l)
	yt_playlist_total="Channel results: $yt_playlist_total_number"
	export bookmark_video_or_music="Video:"
	clear
  fi
fi
	if [[ "$yt_playlist_id" = RD* ]]
	then
	if [ -n "$yt_playlist_results" ]
	then
	clear
	else
	clear
	echo "Please wait."
	yt_playlist_results=$(2>/dev/null yt-dlp -N4 --ignore-errors --no-warnings --quiet --flat-playlist --compat-options no-youtube-unavailable-videos -I "$yt_video_number" --print "%(url)s Music: %(title)s" "https://youtube.com/playlist?list=${yt_playlist_id}" | sed 's/Topic -//g' | sed '/Private video/d' | sed '/Deleted video/d' | sed 's/|//g' | tr -s '[:space:]' | nl -n"ln" -w2 -s " " &)
	yt_playlist_total_number=$(echo "${yt_playlist_results}" | wc -l)
	yt_playlist_total="Playlist results: $yt_playlist_total_number"
	export bookmark_video_or_music="Music:"
	clear
  fi
fi
	if [[ "$yt_playlist_id" = PL* ]]
	then
	if [ -n "$yt_playlist_results" ]
	then
	clear
	else
	clear
	echo "Please wait."
	yt_playlist_results=$(2>/dev/null yt-dlp -N4 --ignore-errors --no-warnings --quiet --flat-playlist --compat-options no-youtube-unavailable-videos -I "$yt_video_number" --print "%(url)s Video: %(duration>%H:%M:%S)s - %(title)s" "https://youtube.com/playlist?list=${yt_playlist_id}" | sed '/Private video/d' | sed '/Deleted video/d' | sed 's/|//g' | tr -s '[:space:]' | nl -n"ln" -w2 -s " " &)
	yt_playlist_total_number=$(echo "${yt_playlist_results}" | wc -l)
	yt_playlist_total="Playlist results: $yt_playlist_total_number"
	export bookmark_video_or_music="Video:"
	clear
  fi
fi
	if [[ "$yt_playlist_id" = OL* ]]
	then
	if [ -n "$yt_playlist_results" ]
	then
	clear
	else
	clear
	echo "Please wait."
	yt_playlist_results=$(2>/dev/null yt-dlp -N4 --ignore-errors --no-warnings --quiet --flat-playlist --compat-options no-youtube-unavailable-videos -I "$yt_video_number" --print "%(url)s Music: %(uploader)s - %(title)s" "https://youtube.com/playlist?list=${yt_playlist_id}" | sed 's/Topic -//g' | sed '/Private video/d' | sed '/Deleted video/d' | sed 's/|//g' | tr -s '[:space:]' | nl -n"ln" -w2 -s " " &)
	yt_playlist_total_number=$(echo "${yt_playlist_results}" | wc -l)
	yt_playlist_total="Album results: $yt_playlist_total_number"
	export bookmark_video_or_music="Music:"
	clear
  fi
fi
}


remove all words with cover

replace
--vo=gpu
with
--vo=libmpv

replace
--hwdec=auto
with
--hwdec=videotoolbox
