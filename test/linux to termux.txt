#!/data/data/com.termux/files/usr/bin/bash 

# yt-playlist Termux

if [ "$EUID" == "0" ]
then echo "Please do not run as root."
exit
fi
external_arguments1=$1
external_arguments2="$2"
yt_playlist_home_dir="${HOME}/.config/yt-playlist"
audio_dir="/sdcard/Music"
video_dir="/sdcard/Videos"
show_audio_dir=$(printf '"%s" \n' "Saved to: /sdcard/Music/")
show_video_dir=$(printf '"%s" \n' "Saved to: /sdcard/Videos/")
tmp_dir="/data/data/com.termux/files/usr/tmp"
yt_video_number="1:100"
version="Termux v2.47.14_test"


Delete the:
Video: %(duration>%H:%M:%S)s - 

Delete all 4.

	if [ -n "$cover_art" ]
	then
        yt-dlp -N4 --no-warnings --quiet -x --write-thumbnail --flat-playlist -o "${tmp_dir}/yt-playlist_icons" -I 1 https://youtube.com/playlist?list=$yt_playlist_id >/dev/null
        else
        if test -f "${tmp_dir}/yt-playlist_icons.jpg"
        then
        rm "${tmp_dir}/yt-playlist_icons.jpg"
  fi
fi


function play_sd_menu_bookmark_menu_hud_function ()
{
        if [ -n "$mpv_video_m4a" ]
	then
	echo "Audio aac 128kbps 44.1kHz."
        fi
	if [ -n "$mpv_video_opus" ]
	then
	echo "Audio opus 128kbps 48kHz."
        fi
        if [ -n "$resume_playback_on_or_off" ]
	then
        echo "Resume playback enabled."
        else
        echo "Resume playback disabled."
        fi
        if test -f "${tmp_dir}/count_down_timer.txt"
        then
        cat "${tmp_dir}/count_down_timer.txt"
        fi
}



#mainmenu
1) Play SD menu.
2) Play SD bookmark menu.
3) Play YTMusic menu.
4) Playlist menu.
5) Billboard charts menu.
6) Download.
7) Enable dl sponsorblock.
8) Sleep timer.
9) Check for update.
q) Quit.





#bookmarkmenu
1) Play + shuffle + inf loop.
2) Play once + shuffle.
3) Play from a start postion.
4) Play a custom playlist.
5) Enable Audio aac 128kbps 44.1kHz.
6) Enable Audio opus 128kbps 48kHz.
7) Enable resume playback.
8) Delete bookmarks.
m) Main menu.







#playsdmenu
1) Play + shuffle + inf loop.
2) Play once + shuffle.
3) Play from a start postion.
4) Play a custom playlist.
5) Open in NewPipe.
6) Enable Audio aac 128kbps 44.1kHz.
7) Enable Audio opus 128kbps 48kHz.
8) Enabled resume playback.
9) Enter number of music/video results.
m) Main menu.




    5)
	if [[ "$yt_playlist_id" = UC* ]]
	then
        am start -a android.intent.action.VIEW -d "https://youtube.com/channel/${yt_playlist_id}" "org.schabi.newpipe"
        play_sd_menu_function
        else
        am start -a android.intent.action.VIEW -d "https://youtube.com/playlist?list=${yt_playlist_id}" "org.schabi.newpipe"
        play_sd_menu_function
        fi
        ;;



function pulse_function ()
{
pkill -9 pulseaudio
pulseaudio -D --exit-idle-time=600
pactl -- set-sink-volume @DEFAULT_SINK@ 100%
$1 $2 $3 $4 $5 $6 $7 $8 $9 ${10} ${11} ${12} ${13} ${14} ${15} ${16} ${17} ${18} ${19} ${20} ${21} ${22} ${23} ${24} ${25}
}


function help_function ()
{
echo "Help menu:              -h or --help"
echo "Version:                -v or --version"
echo "Play/Pause              --play_pause"
echo "Next track              --next"
echo "Prev track              --prev"
echo "Stop or exit            --stop"
echo "Desktop and terminal"
echo "notifications get"
echo "artist and title        --title"
echo "Download when playing" 
echo "Audio"
echo "Download audio          --download_audio opus"
echo "                        --download_audio m4a"
echo "Download video          --download_video mp4"
echo "Import Google takeout:  --import" 
echo "Suppprted file types:"
echo "subscriptions.csv" 
echo "music-library-songs.csv"     
echo 'Example: "yt-playlist --import subscriptions.csv"'
echo ""
echo "debug"
echo 'At Main menu type: "debug"'
echo "Internet status or mpv log file"
echo "mpv log file is saved at"
echo "~/.config/yt-playlist/mpv_log_file.txt"
echo""
echo "notes"
echo "To read change log notes"
echo "At Main menu type: notes"
echo ""
echo "When playing Audio"
echo "Right arrow for FF"
echo "Left arrow for RR"
echo "Spacebar to pause"
echo '">" next track'
echo '"<" prev track'
echo "press enter for next track"
echo '"shift-q" to save playback position and quit'
echo '"q" quit without saving playback position'
echo '"shift-i" info'
echo 'Save to favorites    "f"'
echo 'Save to Bookmarks    "b"'
echo 'Show sleep timer     "s"'
echo 'Download audio       "d"'
echo 'Download video "shift-d"'
echo 'Show date and time   "t"'
echo 'Artist & title "shift-t"'
echo ""
echo "Select Video/Music"
echo 'Select all "ctrl-a"'
echo 'Deselect all "ctrl-d"'
echo 'Cancel "ctrl-c"'
echo "Tab key to select lines"
echo "Enter select one line"
echo ""
echo "Play SD menu"
echo "Sleep timer yes"
echo "Bookmarks yes"
echo "Download Audio yes"
echo "Download Video yes"
echo "Download sponsorblock yes"
echo "Resume playback yes"
echo "Show date and time yes"
echo "Title notifications yes"
echo "FF yes"
echo "RR yes"
echo "Play/Pause yes"
echo "Stop yes"
echo "Next video yes"
echo "Prev video yes"
echo ""
echo "Play SD bookmark menu"
echo "Sleep timer yes"
echo "Bookmarks no"
echo "Download Audio yes"
echo "Download Video yes"
echo "Download sponsorblock yes"
echo "Resume playback yes"
echo "Show date and time yes"
echo "Title notifications yes"
echo "FF yes"
echo "RR yes"
echo "Play/Pause yes"
echo "Stop yes"
echo "Next video yes"
echo "Prev video yes"
echo ""
echo "Play YTMusic menu"
echo "Sleep timer yes"
echo "Bookmarks no"
echo "Download Audio yes"
echo "Download Video no"
echo "Download sponsorblock no"
echo "Resume playback no"
echo "Show date and time yes"
echo "Title notifications yes"
echo "FF yes"
echo "RR yes"
echo "Play/Pause yes"
echo "Stop yes"
echo "Next song yes"
echo "Prev song yes"
}


