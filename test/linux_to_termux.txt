#!/data/data/com.termux/files/usr/bin/bash 

# Updated on 10-9-2023

# yt-playlist Termux

	if [ "$EUID" == "0" ]
	then echo "Please do not run as root."
	exit
	fi
not_a_playlist_id="7807897890789078907807 Not a channel/playlist/album."
external_arguments1=$1
external_arguments2="$2"
yt_playlist_home_dir="${HOME}/.config/yt-playlist"
audio_dir="/sdcard/Music"
video_dir="/sdcard/Videos"
show_audio_dir=$(printf '"%s" \n' "Saved to: /sdcard/Music/")
show_video_dir=$(printf '"%s" \n' "Saved to: /sdcard/Videos/")
tmp_dir="/data/data/com.termux/files/usr/tmp"
termux_pulse_fix="yes"
yt_video_number="1:100"
version="Termux v2.62.1_test"


replace results_function with this one.

function results_function ()
{
	if [[ "$yt_playlist_id" = UC* ]]
	then
	if [ -n "$yt_playlist_results" ]
	then
	clear
	else
	clear
	echo "Please wait."
	yt_playlist_results=$(2>/dev/null yt-dlp -N4 --ignore-errors --no-warnings --quiet --flat-playlist --compat-options no-youtube-unavailable-videos -I "$yt_video_number" --print "%(url)s Video: %(title)s" "https://www.youtube.com/channel/${yt_playlist_id}/videos" | sed '/Private video/d' | sed '/Deleted video/d' | sed 's/|//g' | tr -s '[:space:]' | nl -n"ln" -w2 -s " " &)
	yt_playlist_total_number=$(echo "${yt_playlist_results}" | wc -l)
	yt_playlist_total="Channel results: $yt_playlist_total_number"
	export bookmark_video_or_music="Video:"
	clear
  fi
fi
	if [[ "$yt_playlist_id" = RD* ]]
	then
	if [ -n "$yt_playlist_results" ]
	then
	clear
	else
	clear
	echo "Please wait."
	yt_playlist_results=$(2>/dev/null yt-dlp -N4 --ignore-errors --no-warnings --quiet --flat-playlist --compat-options no-youtube-unavailable-videos -I "$yt_video_number" --print "%(url)s Music: %(title)s" "https://youtube.com/playlist?list=${yt_playlist_id}" | sed 's/Topic -//g' | sed '/Private video/d' | sed '/Deleted video/d' | sed 's/|//g' | tr -s '[:space:]' | nl -n"ln" -w2 -s " " &)
	yt_playlist_total_number=$(echo "${yt_playlist_results}" | wc -l)
	yt_playlist_total="Playlist results: $yt_playlist_total_number"
	export bookmark_video_or_music="Music:"
	clear
  fi
fi
	if [[ "$yt_playlist_id" = PL* ]]
	then
	if [ -n "$yt_playlist_results" ]
	then
	clear
	else
	clear
	echo "Please wait."
	yt_playlist_results=$(2>/dev/null yt-dlp -N4 --ignore-errors --no-warnings --quiet --flat-playlist --compat-options no-youtube-unavailable-videos -I "$yt_video_number" --print "%(url)s Video: %(title)s" "https://youtube.com/playlist?list=${yt_playlist_id}" | sed '/Private video/d' | sed '/Deleted video/d' | sed 's/|//g' | tr -s '[:space:]' | nl -n"ln" -w2 -s " " &)
	yt_playlist_total_number=$(echo "${yt_playlist_results}" | wc -l)
	yt_playlist_total="Playlist results: $yt_playlist_total_number"
	export bookmark_video_or_music="Video:"
	clear
  fi
fi
	if [[ "$yt_playlist_id" = OL* ]]
	then
	if [ -n "$yt_playlist_results" ]
	then
	clear
	else
	clear
	echo "Please wait."
	yt_playlist_results=$(2>/dev/null yt-dlp -N4 --ignore-errors --no-warnings --quiet --flat-playlist --compat-options no-youtube-unavailable-videos -I "$yt_video_number" --print "%(url)s Music: %(uploader)s - %(title)s" "https://youtube.com/playlist?list=${yt_playlist_id}" | sed 's/Topic -//g' | sed '/Private video/d' | sed '/Deleted video/d' | sed 's/|//g' | tr -s '[:space:]' | nl -n"ln" -w2 -s " " &)
	yt_playlist_total_number=$(echo "${yt_playlist_results}" | wc -l)
	yt_playlist_total="Album results: $yt_playlist_total_number"
	export bookmark_video_or_music="Music:"
	clear
  fi
fi
}

replace play_sd_menu_bookmark_menu_hud_function with this one.

function play_sd_menu_bookmark_menu_hud_function ()
{
	if [ -n "$mpv_video_m4a" ]
	then
	echo "Audio aac 128kbps 44.1kHz."
	fi
	if [ -n "$mpv_video_opus" ]
	then
	echo "Audio opus 128kbps 48kHz."
	fi
	audio_effects_hud_function
	if [ -n "$resume_playback_on_or_off" ]
	then
	echo "Resume playback enabled."
	else
	echo "Resume playback disabled."
	fi
	if [ -z "$audio_video_sponsorblock" ]
	then
	echo "Audio sponsorblock enabled."
	else
	echo "Audio sponsorblock disabled."
	fi
	if test -f "${tmp_dir}/count_down_timer.txt"
	then
	cat "${tmp_dir}/count_down_timer.txt"
	fi
}

replace yt_playlist_start_function with this one.

function yt_playlist_start_function ()
{
	ps_list=$(ps -e)
	yt_playlist_count=$(echo "$ps_list" | grep yt-playlist | wc -l)
	if [[ "$yt_playlist_count" -gt 1 ]]
	then
	echo "Error: yt-playlist is already running."
	exit
	else
	resume_playback_off_function
	audio_video_sponsorblock_off_function
	yt_dlp_sponsorblock_off_function
	mpv_log_file_off_funciton
	mpv_music_opus_function
	mpv_video_m4a_function
	enable_jemalloc_function
	clean_up_function
	main_menu_function
	fi
}


delete the playhdmenu

delete all functions with the word cover in them.

rename
Audio/video sponsorblock
to
Audio sponsorblock


#mainmenu
1) Play SD menu.
2) Play SD bookmark menu.
3) Play YTMusic menu.
4) Playlist menu.
5) Billboard charts menu.
6) Download.
7) Enable dl sponsorblock.
8) Sleep timer.
9) Audio effects menu.
10) Check for update.
q) Quit.





#bookmarkmenu
1) Play + shuffle + inf loop.
2) Play once + shuffle.
3) Play from a start position.
4) Play a custom playlist.
5) Enable audio aac 128kbps 44.1kHz.
6) Enable audio opus 128kbps 48kHz.
7) Enable resume playback.
8) Enable audio sponsorblock.
9) Delete bookmarks.
m) Main menu.





#playsdmenu
1) Play + shuffle + inf loop.
2) Play once + shuffle.
3) Play from a start position.
4) Play a custom playlist.
5) Open in NewPipe.
6) Enable audio aac 128kbps 44.1kHz.
7) Enable audio opus 128kbps 48kHz.
8) Enabled resume playback.
9) Enable audio sponsorblock.
10) Enter number of music/video results.
m) Main menu.




5)
	if [[ "$yt_playlist_id" = UC* ]]
	then
	am start -a android.intent.action.VIEW -d "https://youtube.com/channel/${yt_playlist_id}" "org.schabi.newpipe"
	play_sd_menu_function
	else
	am start -a android.intent.action.VIEW -d "https://youtube.com/playlist?list=${yt_playlist_id}" "org.schabi.newpipe"
	play_sd_menu_function
	fi
	;;




function help_function ()
{
	echo "Help menu:              -h or --help"
	echo "Version:                -v or --version"
	echo "yt-playlist setup       --setup"
	echo "Play/Pause              --play_pause"
	echo "Mute/Unmute             --mute_unmute"
	echo "Next track              --next"
	echo "Prev track              --prev"
	echo "Stop or exit            --stop"
	echo "Desktop and terminal"
	echo "notifications get"
	echo "artist and title        --title"
	echo "Download when playing"
	echo "Audio"
	echo "Download audio          --download_audio opus"
	echo "                        --download_audio m4a"
	echo "Download video          --download_video mp4"
	echo "Import Google takeout:  --import"
	echo "Suppprted file types:"
	echo "subscriptions.csv"
	echo "music-library-songs.csv"
	echo 'Example: "yt-playlist --import subscriptions.csv"'
	echo ""
	echo "Debug menu"
	echo 'At Main menu type: "debug"'
	echo""
	echo "Change log notes"
	echo 'At Main menu type: "notes"'
	echo ""
	echo "When playing Audio"
	echo "Volume             = 9 and 0"
	echo "Right arrow for FF"
	echo "Left arrow for RR"
	echo "Spacebar to pause"
	echo "Next track         = >"
	echo "Prev track         = <"
	echo "Enter key for next track"
	echo "Enable English subtitles     = j"
	echo "Save position and quit       = shift-q"
	echo "Quit without saving position = q"
	echo "Info               = shift-i"
	echo "Save to favorites  = f"
	echo "Save to Bookmarks  = b"
	echo "Show sleep timer   = s"
	echo "Download audio     = d"
	echo "Download video     = shift-d"
	echo "Show date and time = t"
	echo "Artist & title     = shift-t"
	echo ""
	echo "Select Video/Music"
	echo "Select all     = ctrl-a"
	echo "Deselect all   = ctrl-d"
	echo "Cancel         = ctrl-c"
	echo "Tab key to select lines"
	echo "Enter select one line"
	echo ""
	echo "Play SD menu"
	echo "Sleep timer yes"
	echo "Bookmarks yes"
	echo "Download Audio yes"
	echo "Download Video yes"
	echo "Download sponsorblock yes"
	echo "Audio sponsorblock yes"
	echo "English subtitles yes"
	echo "Resume playback yes"
	echo "Show date and time yes"
	echo "Title notifications yes"
	echo "Adjust volume yes"
	echo "Audio normalization yes"
	echo "Audio effects yes"
	echo "FF yes"
	echo "RR yes"
	echo "Play/Pause yes"
	echo "Mute/Unmute yes"
	echo "Stop yes"
	echo "Next track yes"
	echo "Prev track yes"
	echo ""
	echo "Play SD bookmark menu"
	echo "Sleep timer yes"
	echo "Bookmarks no"
	echo "Download Audio yes"
	echo "Download Video yes"
	echo "Download sponsorblock yes"
	echo "Audio sponsorblock yes"
	echo "English subtitles yes"
	echo "Resume playback yes"
	echo "Show date and time yes"
	echo "Title notifications yes"
	echo "Adjust volume yes"
	echo "Audio normalization yes"
	echo "Audio effects yes"
	echo "FF yes"
	echo "RR yes"
	echo "Play/Pause yes"
	echo "Mute/Unmute yes"
	echo "Stop yes"
	echo "Next track yes"
	echo "Prev track yes"
	echo ""
	echo "Play YTMusic menu"
	echo "Sleep timer yes"
	echo "Bookmarks no"
	echo "Download Audio yes"
	echo "Download Video no"
	echo "Download sponsorblock no"
	echo "Audio sponsorblock no"
	echo "English subtitles no"
	echo "Resume playback no"
	echo "Show date and time yes"
	echo "Title notifications yes"
	echo "Adjust volume yes"
	echo "Audio normalization yes"
	echo "Audio effects yes"
	echo "FF yes"
	echo "RR yes"
	echo "Play/Pause yes"
	echo "Mute/Unmute yes"
	echo "Stop yes"
	echo "Next track yes"
	echo "Prev track yes"
}
